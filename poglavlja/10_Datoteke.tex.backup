\sstrana
\section{Datoteke}
%% ----------- KARAKTER PO KARAKTER POCETAK ----------

% \subsection{Unos karakter po karakter}

\begin{Exercise}[label=v3_01] 
Napisati program koji prepisuje sadržaj datoteke $ulaz.txt$ u datoteku $izlaz.txt$ karakter po karakter.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{ulaz.txt}#
#\datoteka{Danas je 21. mart.}#
#\datoteka{To je prvi dan proleca.}#

#\naslovDat{izlaz.txt}#
#\datoteka{Danas je 21. mart.}#
#\datoteka{To je prvi dan proleca.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{ulaz.txt}#
#\datoteka{Ispit iz Programiranja 1 je}#
#\datoteka{zakazan za 10. jun.}#

#\naslovDat{izlaz.txt}#
#\datoteka{Ispit iz Programiranja 1 je}#
#\datoteka{zakazan za 10. jun.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{ulaz.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{datoteke ulaz.txt}#
\end{upotreba}
\end{minitest}
\linkresenje{v3_01}
\end{Exercise}
\begin{Answer}[ref=v3_01]
\includecode{resenja/4_Datoteke/sve/1.c}
\end{Answer}


\begin{Exercise}[label=p3_02] 
Napisati program koji prepisuje svaki treći karakter datoteke $ulaz.txt$ u datoteku $izlaz.txt$.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{ulaz.txt}#
#\datoteka{Volim programiranje.}#

#\naslovDat{izlaz.txt}#
#\datoteka{Vipgmae}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{ulaz.txt}#
#\datoteka{Zivot je lep!}#

#\naslovDat{izlaz.txt}#
#\datoteka{Zojl!}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{ulaz.txt}#
#\datoteka{1234567890}#

#\naslovDat{izlaz.txt}#
#\datoteka{1470}#
\end{upotreba}
\end{minitest}

\begin{minitest}
\begin{upotreba}{4}
#\naslovDat{ulaz.txt}#
#\datoteka{Ova datoteka}#
#\datoteka{sadrzi tekst}#
#\datoteka{u vise}#
#\datoteka{linija.}#

#\naslovDat{izlaz.txt}#
#\datoteka{O te}#
#\datoteka{diet sli.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{5}
#\naslovDat{ulaz.txt}#
#\datoteka{U Beogradu ce biti}#
#\datoteka{suncan i lep}#
#\datoteka{dan.}#

#\naslovDat{izlaz.txt}#
#\datoteka{Ueruei}#
#\datoteka{nn pa}#
\end{upotreba}
\end{minitest}


\linkresenje{p3_02}
\end{Exercise}
\begin{Answer}[ref=p3_02]
\includecode{resenja/4_Datoteke/sve/2.c}
\end{Answer}


\begin{Exercise}[label=p3_id17]         
Napisati program koji šifruje sadržaj datoteke $podaci.txt$ tako što svako slovo ciklično 
zamenjuje njegovim prethodnikom suprotne veličine i upisuje u datoteku $sifra.txt$. 
Na primer, slovo \kckod{b} se zamenjuje slovom \kckod{A}, slovo 
\kckod{B} slovom \kckod{a}, slovo \kckod{a} slovom \kckod{Z}, slovo \kckod{A} slovom 
\kckod{z}, itd. Ostali karakteri ostaju nepromenjeni. 
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{podaci.txt}#
#\datoteka{Matematicki fakultet}#
#\datoteka{Studentski trg 16}#
#\datoteka{Beograd}#

#\naslovDat{sifra.txt}#
#\datoteka{lZSDLZSHBJH EZJTKSDS}#
#\datoteka{rSTCDMSRJH sQF 16}#
#\datoteka{aDNFQZC}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{podaci.txt}#
#\datoteka{a=x+y;}#
#\datoteka{x=b+5;}#

#\naslovDat{sifra.txt}#
#\datoteka{Z=W+X;}#
#\datoteka{W=A+5;}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{podaci.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{datoteke podaci.txt.}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_id17}
\end{Exercise}
\begin{Answer}[ref=p3_id17]
\includecode{resenja/4_Datoteke/sve/3.c}
\end{Answer}


\begin{Exercise}[label=p3_id16]         
Napisati program koji za dve datoteke čija se imena unose sa standarnog ulaza, radi sledeće:
\begin{itemize}
\item{za svaku cifru u prvoj datoteci, u drugu datoteku upisuje $0$}
\item{za svako slovo u prvoj datoteci, u drugu datoteku upisuje $1$}
\item{za sve ostale karaktere u prvoj datoteci, u drugu datoteku upisuje $2$}
\end{itemize}
Pretpostaviti da je maksimalna dužina naziva datoteka $20$ karaktera. 
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite ime prve datoteke:}#
#\ulaz{kilometraze.txt}#
#\izlaz{Unesite ime druge datoteke:}#
#\ulaz{sifra.txt}#

#\naslovDat{kilometraze.txt}#
#\datoteka{Beograd - Nis 230km}#
#\datoteka{Uzice - Cacak 56.3km}#
#\datoteka{Subotica - Ruma 139km}#

#\naslovDat{sifra.txt}#
#\datoteka{111111122211120001121111122}#
#\datoteka{211111200201121111111122211}#
#\datoteka{11200011}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite ime prve datoteke:}#
#\ulaz{ulaz.txt}#
#\izlaz{Unesite ime druge datoteke:}#
#\ulaz{izlaz.txt}#

#\naslovDat{ulaz.txt}#
#\datoteka{18. februar 2019.}#

#\naslovDat{izlaz.txt}#
#\datoteka{11220000000211112}
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite ime prve datoteke:}#
#\ulaz{in.dat}#
#\izlaz{Unesite ime druge datoteke:}#
#\ulaz{out.dat}#

#\naslovDat{in.dat ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{prve datoteke.}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_id16}
\end{Exercise}
\begin{Answer}[ref=p3_id16]
\includecode{resenja/4_Datoteke/sve/5.c}
\end{Answer}


\begin{Exercise}[label=p3_iv3] 
Sa standarnog ulaza učitavaju se imena dveju datoteka i
jedan karakter koji označava opciju. 
Napisati program koji prepisuje sadržaj prve datoteke u drugu tako što u slučaju da je
navedena opcija \kckod{u}, sva mala slova zamenjuje velikim slovima, a u slučaju da je
navedena opcija \kckod{l}, sva velika slova zamenjuje malim slovima. 
Pretpostaviti da je maksimalna dužina naziva datoteka $20$ karaktera. 
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{miditest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite imena datoteka i opciju:}#
#\ulaz{ulaz.txt izlaz.txt u}#

#\naslovDat{ulaz.txt}#
#\datoteka{danas je lep dan}#
#\datoteka{i Ja zelim}#
#\datoteka{da postanem programer}#

#\naslovDat{izlaz.txt}#
#\datoteka{DANAS JE LEP DAN}#
#\datoteka{I JA ZELIM}#
#\datoteka{DA POSTANEM PROGRAMER}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite imena datoteka i opciju:}#
#\ulaz{prva.dat druga.dat l}#

#\naslovDat{prva.dat}#
#\datoteka{Cena soka je 30}#
#\datoteka{Cena vina je 150}#
#\datoteka{Cena limunade je 200}#
#\datoteka{Cena sendvica je 120}#

#\naslovDat{druga.dat}#
#\datoteka{cena soka je 30}#
#\datoteka{cena vina je 150}#
#\datoteka{cena limunade je 200}#
#\datoteka{cena sendvica je 120}#
\end{upotreba}
\end{miditest}

\begin{miditest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite imena datoteka i opciju:}#
#\ulaz{primer.c prazna.txt V}#

#\naslovDat{primer.c}#
#\datoteka{\#include <stdio.h>}#
#\datoteka{int main()}#
#\datoteka{\{}#
#\datoteka{\}}#

#\naslovDat{prazna.txt}#
#\datoteka{}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan unos.}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{4}
#\naslovInt#
#\izlaz{Unesite imena datoteka i opciju:}#
#\ulaz{primer.c prazna.txt V}#

#\naslovDat{primer.c ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{prve datoteke.}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_iv3}
\end{Exercise}
\begin{Answer}[ref=p3_iv3]
%\includecode{resenja/4_Datoteke/sve/4.c}
Pogledajte zadatke \ref{p3_id17} i \ref{p3_id16}.
\end{Answer}


\begin{Exercise}[label=p3_01] 
Napisati program koji prebrojava mala slova u datoteci $podaci.txt$ i dobijeni rezultat ispisuje na
standardni izlaz.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{podaci.txt}#
#\datoteka{Matematicki fakultet}#
#\datoteka{Studentski trg 16}#
#\datoteka{Beograd}#

#\naslovIzlaz#
#\izlaz{Broj malih slova je: 35}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{podaci.txt}#
#\datoteka{PrograMiranje}#

#\naslovIzlaz#
#\izlaz{Broj malih slova je: 11}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{podaci.txt}#
#\datoteka{MATEMATIKA}#
#\datoteka{12+34=46}#

#\naslovIzlaz#
#\izlaz{Broj malih slova je: 0}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_01}
\end{Exercise}
\begin{Answer}[ref=p3_01]
%\includecode{resenja/4_Datoteke/sve/6.c}
Pogledajte zadatke \ref{p3_id17} i \ref{p3_id16}.
\end{Answer}


\begin{Exercise}[label=p3_id14]         
Napisati program koji u datoteci čije se ime unosi sa standardnog ulaza prebrojava
koliko se puta pojavljuje svaka od cifara i na standardni izlaz ispisuje cifru sa najvećim brojem pojavljivanja. 
Ukoliko ima više takvih cifara, ispisati sve. Ukoliko datoteka ne sadrži nijednu cifru, ispisati odgovarajuću
poruku. 
Pretpostaviti da je maksimalna dužina naziva datoteke $20$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{ulaz.txt}#

#\naslovDat{ulaz.txt}#
#\datoteka{danas je lep dan}#
#\datoteka{i ja zelim}#
#\datoteka{da postanem programer}#

#\naslovIzlaz#
#\izlaz{Datoteka ne sadrzi cifre.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{prva.dat}#

#\naslovDat{prva.dat}#
#\datoteka{Cena soka je 30}#
#\datoteka{Cena vina je 150}#
#\datoteka{Cena limunade je 200}#
#\datoteka{Cena sendvica je 120}#

#\naslovIzlaz#
#\izlaz{Najcesce cifre: 0}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{primer.c}#

#\naslovDat{primer.c}#
#\datoteka{1 22 333.444 }#

#\naslovIzlaz#
#\izlaz{Najcesce cifre: 3 4}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_id14}
\end{Exercise}
\begin{Answer}[ref=p3_id14]
\includecode{resenja/4_Datoteke/sve/7.c}
\end{Answer}


\begin{Exercise}[label=p3_x2]         
Napisati program koji u datoteci čije je ime dato kao argument komandne linije proverava da li su zagrade pravilno uparene.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out zagrade.txt}#

#\naslovDat{zagrade.txt}#
#\datoteka{ab( cd) ..}#
#\datoteka{((3+4)*5+1)*9}#

#\naslovIzlaz#
#\izlaz{Zagrade jesu uparene.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out primer2.dat}#

#\naslovDat{primer2.dat}#
#\datoteka{(7+8}#
#\datoteka{nisu(}#
#\datoteka{uparene}#

#\naslovIzlaz#
#\izlaz{Zagrade nisu uparene.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out primer3.dat}#

#\naslovDat{primer3.dat}#
#\datoteka{)) 7 + 6 ((}#

#\naslovIzlaz#
#\izlaz{Zagrade nisu uparene.}#
\end{upotreba}
\end{minitest}

\linkresenje{p3_x2}
\end{Exercise}
\begin{Answer}[ref=p3_x2]
\includecode{resenja/4_Datoteke/sve/8.c}
\end{Answer}


\begin{Exercise}[label=p3_x4]         
Napisati program koji prebrojava slova i cifre u datoteci.
\begin{description}
\item{(a)} Napisati funkciju \kckod{int ucitaj\_karaktere(char s[], FILE *f)}
  kojom se učitavaju karakteri iz datoteke \kckod{f} u niz karaktera \kckod{s}. Dozvoljeni karakteri za učitavanje su mala i
  velika slova engleske abecede, kao i cifre.  Učitavanje se prekida kada se naiđe
  na znak za novi red ili nedozvoljeni karakter. Funkcija vraća broj elemenata niza uspešno učitanih karaktera.
\item{(b)} Napisati funkciju
  \kckod{void prebroj(char s[], int n, int *broj\_slova, int *broj\_cifara)} kojom se
  određuje broj slovnih elemenata niza karaktera (velikih ili malih slova)
  kao i broj cifara.
\end{description}
Napisati program koji koristeći prethodne funkcije prebrojava cifre i slova u datoteci 
čije se ime zadaje kao argument komandne linije, a zatim ispisuje dobijene vrednosti na standardni izlaz.
Pretpostaviti da je maksimalni broj karaktera datoteke $1000$.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out skup.txt}#

#\naslovDat{skup.txt}#
#\datoteka{OvoJeSkupKaraktera.123}#

#\naslovIzlaz#
#\izlaz{Broj slova: 18}#
#\izlaz{Broj cifara: 0}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out skup2.txt}#

#\naslovDat{skup2.txt}#
#\datoteka{ovdeimamo\$dolar}#

#\naslovIzlaz#
#\izlaz{Broj slova: 9}#
#\izlaz{Broj cifara: 0}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out skup3.txt}#

#\naslovDat{skup3.txt}#
#\datoteka{broj3}#
#\datoteka{broj5}#

#\naslovIzlaz#
#\izlaz{Broj slova: 4}#
#\izlaz{Broj cifara: 1}#
\end{upotreba}
\end{minitest}

\begin{minitest}
\begin{upotreba}{4}
#\naslovPokretanje#
#\argumenti{./a.out skup4.txt}#

#\naslovDat{skup4.txt}#
#\datoteka{11.2.2019.}#

#\naslovIzlaz#
#\izlaz{Broj slova: 0}#
#\izlaz{Broj cifara: 2}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{5}
#\naslovPokretanje#
#\argumenti{./a.out skup5.txt}#

#\naslovDat{skup5.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{6}
#\naslovPokretanje#
#\argumenti{./a.out}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_x4}
\end{Exercise}
\begin{Answer}[ref=p3_x4]
\includecode{resenja/4_Datoteke/sve/9.c}
\end{Answer}


%% ----------- KARAKTER PO KARAKTER KRAJ ----------

%% ----------- REC PO REC POCETAK ----------

% \subsection{Rec po rec}

\begin{Exercise}[label=p3_08] 
 Napisati program koji sa standardnog ulaza učitava reč $s$ i u datoteku $rotacije.txt$
 upisuje sve njene rotacije. Pretpostaviti da je maksimalna dužina reči $20$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite rec:}\ulaz{abcde}#

#\naslovDat{rotacije.txt}#
#\datoteka{abcde}#
#\datoteka{bcdea}#
#\datoteka{cdeab}#
#\datoteka{deabc}#
#\datoteka{eabcd}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite rec:}\ulaz{1234}#

#\naslovDat{rotacije.txt}#
#\datoteka{1234}#
#\datoteka{2341}#
#\datoteka{3412}#
#\datoteka{4123}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite rec:}\ulaz{a=3*x+5;}#

#\naslovDat{rotacije.txt}#
#\datoteka{a=3*x+5;}#
#\datoteka{=3*x+5;a}#
#\datoteka{3*x+5;a=}#
#\datoteka{*x+5;a=3}#
#\datoteka{x+5;a=3*}#
#\datoteka{+5;a=3*x}#
#\datoteka{5;a=3*x+}#
#\datoteka{;a=3*x+5}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_08}
\end{Exercise}
\begin{Answer}[ref=p3_08]
\includecode{resenja/4_Datoteke/sve/10.c}
\end{Answer}


\begin{Exercise}[label=p3_id18]         
Sa standarnog ulaza se učitava ime datoteke i nenegativan ceo
broj $k$. Napisati program koji učitava reči iz datoteke (reč je niz karaktera između blanko simbola) i svaku pročitanu reč
rotira za $k$ mesta u levo i tako dobijenu reč upisuje u datoteku čije je ime $rotirano.txt$. 
Pretpostaviti da je maksimalna dužina naziva datoteke $20$ karaktera, da
datoteka sadrži samo slova i beline i da je maksimalna dužina jedne reči u datoteci $100$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{ulaz.txt}#
#\izlaz{Unesite broj k:}\ulaz{3}#

#\naslovDat{ulaz.txt}#
#\datoteka{jedan dva}#
#\datoteka{tri cetiri}#

#\naslovDat{rotirano.txt}#
#\datoteka{anjed dva tri iricet}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{in.dat}#
#\izlaz{Unesite broj k:}\ulaz{5}#

#\naslovDat{in.dat}#
#\datoteka{Popodne ce biti kise}#

#\naslovDat{rotirano.txt}#
#\datoteka{nePopod ec itib isek}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{input.txt}#
#\izlaz{Unesite broj k:}\ulaz{0}#

#\naslovDat{input.txt}#
#\datoteka{Popodne ce}#
#\datoteka{biti kise}#

#\naslovDat{rotirano.txt}#
#\datoteka{Popodne ce biti kise}#
\end{upotreba}
\end{minitest}

\linkresenje{p3_id18}
\end{Exercise}
\begin{Answer}[ref=p3_id18]
\includecode{resenja/4_Datoteke/sve/11.c}
\end{Answer}


\begin{Exercise}[label=p3_id20]         
Napisati program koji iz datoteke $razno.txt$ u datoteku $palindromi.txt$ prepisuje sve palindrome. Reč je palindrom ako se isto čita sa leve i desne strane bez obzira na veličinu slova. Pretpostaviti da je maksimalna dužina reči $200$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{razno.txt}#
#\datoteka{Ana i melem su}#
#\datoteka{primeri palindroma.}#

#\naslovDat{palindromi.txt:}#
#\datoteka{Ana i melem}
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{razno.txt}#
#\datoteka{jabuka neven pomorandza}#
#\datoteka{kuk Oko kapAk pero radar}#
#\datoteka{caj}#

#\naslovDat{palindromi.txt:}#
#\datoteka{neven kuk Oko}#
#\datoteka{kapAk radar}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{razno.txt}#
#\datoteka{ovde nema palindroma}#

#\naslovDat{palindromi.txt:}#
\end{upotreba}
\end{minitest}

\linkresenje{p3_id20}
\end{Exercise}
\begin{Answer}[ref=p3_id20]
%\includecode{resenja/4_Datoteke/sve/13.c}
Pogledajte zadatke \ref{p3_id18} i \ref{palindrom}.
\end{Answer}


\begin{Exercise}[label=p3_iv5]         
U datoteci čije se ime zadaje sa standardnog ulaza nalazi
se broj $n$ ($n\leq 256$), a zatim i $n$ reči. 
Napisati program koji učitava reči iz datoteke u niz i iz niza uklanja sve duplikate 
i upisuje izmenjeni niz u datoteku $bez\_duplikata.txt$ 
Pretpostaviti da je maksimalna dužina naziva datoteke $20$ karaktera, 
a maksimalna dužina jedne reči u datoteci $50$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{imena.txt}#

#\naslovDat{imena.txt}#
#\datoteka{12}#
#\datoteka{Ana Milos Ana Marko}#
#\datoteka{Petar Filip Jovana Ana}#
#\datoteka{Petar Ivan Nikola Filip}#

#\naslovDat{bez\_duplikata.txt:}#
#\datoteka{Ana Milos Marko Petar}#
#\datoteka{Filip Jovana Ivan Nikola}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{gradovi.txt}#

#\naslovDat{gradovi.txt}#
#\datoteka{10}#
#\datoteka{Sombor Beograd}#
#\datoteka{Nis Beograd}#
#\datoteka{Beograd Indjija}#
#\datoteka{Nis Ruma}#
#\datoteka{Ruma Sombor}#

#\naslovDat{bez\_duplikata.txt:}#
#\datoteka{Sombor Nis Beograd}#
#\datoteka{Indjija Ruma}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovInt#
#\izlaz{Unesite ime datoteke:}#
#\ulaz{gradovi.txt}#

#\naslovDat{gradovi.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_iv5}
\end{Exercise}
\begin{Answer}[ref=p3_iv5]
\includecode{resenja/4_Datoteke/sve/14.c}
\end{Answer}

% 
% \begin{Exercise}[label=p3_id19]         
% Napisati program koji u datoteku $izlaz.txt$ prepisuje sve
% reči iz datoteke $ulaz.txt$ čiji je zbir ASCII kodova
% karaktera strogo veći od $1000$. Reči su odvojene prazninama i nisu
% duže od $200$ karaktera.
% U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.
% 
% \begin{miditest}
% \begin{upotreba}{1}
% #\naslovDat{ulaz.txt}#
% #\datoteka{Sa standardnog ulaza unosi se neoznacen}#
% #\datoteka{ceo broj. Formirati novi broj koji se dobija}#
% #\datoteka{izbacivanjem svake druge cifre iz polaznog}#
% #\datoteka{broja.}#
% 
% #\naslovDat{izlaz.txt}#
% #\datoteka{standardnog izbacivanjem}
% \end{upotreba}
% \end{miditest}
% \begin{miditest}
% \begin{upotreba}{2}
% #\naslovDat{ulaz.txt}#
% #\datoteka{i sada jedan kratak primer}#
% #\datoteka{p1: 1234567890}#
% #\datoteka{p2: ABCDEFGHIJ}#
% #\datoteka{p3: abcdefghij}#
% 
% #\naslovDat{izlaz.txt}#
% #\datoteka{abcdefghij}
% \end{upotreba}
% \end{miditest}
% 
% \begin{miditest}
% \begin{upotreba}{3}
% #\naslovDat{ulaz.txt}#
% #\datoteka{konstruisanje test-primera sa}#
% #\datoteka{i dugackim recima kao prestolonaslednik}#
% #\datoteka{brojevima1234567890}#
% 
% #\naslovDat{izlaz.txt}#
% #\datoteka{konstruisanje test-primera}#
% #\datoteka{prestolonaslednik}#
% #\datoteka{brojevima1234567890}#
% \end{upotreba}
% \end{miditest}
% \begin{miditest}
% \begin{upotreba}{4}
% #\naslovDat{ulaz.txt}#
% #\datoteka{ima jos dugackih reci: predskazanje,}#
% #\datoteka{potom}#
% #\datoteka{nelogicnosti, zanemarivati,}#
% #\datoteka{odugovlaciti, a ima}#
% #\datoteka{i i malih reci koje su kratke}#
% #\datoteka{predosecaj}#
% 
% #\naslovDat{izlaz.txt}#
% #\datoteka{predskazanje, nelogicnosti,}#
% #\datoteka{zanemarivati, odugovlaciti,}#
% #\datoteka{predosecaj}#
% \end{upotreba}
% \end{miditest}
% \linkresenje{p3_id19}
% \end{Exercise}
% \begin{Answer}[ref=p3_id19]
% \includecode{resenja/4_Datoteke/sve/15.c}
% \end{Answer}


%% ----------- REC PO REC KRAJ ----------



%% ----------- BROJ PO BROJ POCETAK ----------

% \subsection{Broj po broj}

\begin{Exercise}[label=v3_03] 
U datoteci čije se ime zadaje kao prvi argument komandne linije
nalazi se ceo pozitivan broj $n$, a zatim i $n$ celih brojeva. Napisati program koji
na standardni izlaz ispisuje 
koliko $k$-tocifrenih brojeva postoji u datoteci, pri čemu se
pozitivan ceo broj $k$ zadaje kao drugi argument komandne linije.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out ulaz.txt 2}#

#\naslovDat{ulaz.txt}#
#\datoteka{6}#
#\datoteka{15 193 -27 9790 35 1}#

#\naslovIzlaz#
#\izlaz{Broj 2-cifrenih brojeva: 3}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out ulaz.txt 5}#

#\naslovDat{ulaz.txt}#
#\datoteka{4}#
#\datoteka{15 193 -27 9790}#

#\naslovIzlaz#
#\izlaz{Broj 5-cifrenih brojeva: 0}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out ulaz.txt}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{minitest}
\linkresenje{v3_03}
\end{Exercise}
\begin{Answer}[ref=v3_03]
\includecode{resenja/4_Datoteke/sve/16.c}
\end{Answer}


\begin{Exercise}[label=p3_05] 
 Napisati program koji na standardni izlaz ispisuje maksimum brojeva iz datoteke $brojevi.txt$.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{brojevi.txt}#
#\datoteka{2.36 -16.11 5.96 8.88}#
#\datoteka{-265.31 54.96 38.4}#

#\naslovIzlaz#
#\izlaz{Najveci broj je: 54.96}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{brojevi.txt}#
#\datoteka{10.5 183.111 -90.2 3.167}#

#\naslovIzlaz#
#\izlaz{Najveci broj je: 183.111}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{brojevi.txt}#
#\datoteka{-62.7 -190.2 -2.3 -1000}#
#\datoteka{-198.25 -8}#

#\naslovIzlaz#
#\izlaz{Najveci broj je: -2.3}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_05}
\end{Exercise}
\begin{Answer}[ref=p3_05]
\includecode{resenja/4_Datoteke/sve/17.c}
\end{Answer}


\begin{Exercise}[label=p3_iv4]         
Prvi red datoteke $matrice.txt$ sadrži dva cela broja manja od
$50$ koji predstavljaju redom broj vrsta i broj kolona realne matrice
$a$. Svaki sledeći red sadrži po jednu vrstu matrice. Napisati
program koji pronalazi sve elemente matrice $a$ koji su jednaki zbiru
svih svojih susednih elemenata i štampa ih u obliku
\kckod{(broj vrste, broj kolone, vrednost elementa)}. 
Pretpostaviti da je sadržaj datoteke ispravan.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.
\uputstvo{U zadatku \ref{mat.4} je dato objašnjenje koji elementi matrice su susedni.}

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{matrice.txt}#
#\datoteka{3 4}#
#\datoteka{1  2  3  4}#
#\datoteka{7  2 15 -3}#
#\datoteka{-1  3  1  3}#

#\naslovIzlaz#
#\izlaz{(1, 0, 7)}#
#\izlaz{(1, 2, 15)}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{matrice.txt}#
#\datoteka{2 2}#
#\datoteka{1  1 }#
#\datoteka{-2  2}#

#\naslovIzlaz#
#\izlaz{(0, 0, 1)}#
#\izlaz{(0, 1, 1)}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{matrice.txt}#
#\datoteka{1 4}#
#\datoteka{9 3 5 2}#

#\naslovIzlaz#
#\izlaz{(0, 2, 5)}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_iv4}
\end{Exercise}
\begin{Answer}[ref=p3_iv4]
\includecode{resenja/4_Datoteke/sve/18.c}
\end{Answer}


\begin{Exercise}[label=p3_x6]         
Prvi red datoteke $ulaz.txt$ sadrži dva cela broja između $2$ i $50$
koji predstavljaju redom broj vrsta i broj kolona realne matrice
$a$. Svaki sledeći red sadrži po jednu vrstu matrice. Napisati
program koji nalazi i štampa sve četvorke oblika
\kckod{(a(i,j), a(i+1,j), a(i,j+1),a(i+1,j+1))} u kojima su svi
elementi međusobno različiti.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{ulaz.txt}#
#\datoteka{3 4}#
#\datoteka{1  2  3  4}#
#\datoteka{7  2 15 -3}#
#\datoteka{-1  3  1  3}#

#\naslovIzlaz#
#\izlaz{(3, 15, 4, -3)}#
#\izlaz{(7, -1, 2, 3)}#
#\izlaz{(2, 3, 15, 1)}#
#\izlaz{(15, 1, -3, 3)}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{matrice.txt}#
#\datoteka{1 4}#
#\datoteka{9 3 5 2}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravna}#
#\izlaz{dimenzija.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{matrice.txt}#
#\datoteka{2 2}#
#\datoteka{1  1 }#
#\datoteka{-2  2}#

#\naslovIzlaz#
\end{upotreba}
\end{minitest}
\linkresenje{p3_x6}
\end{Exercise}
\begin{Answer}[ref=p3_x6]
%\includecode{resenja/4_Datoteke/sve/19.c}
Pogledajte zadatak \ref{p3_iv4}.
\end{Answer}

%% ----------- BROJ PO BROJ KRAJ ----------


%% ----------- STRUKTURE POCETAK ----------


\begin{Exercise}[label=p3_07] 
 U datoteci $tacke.txt$ se nalazi broj tačaka, a zatim u posebnim redovima  
 za svaku tačku njene $x$ i $y$ koordinate. 
 Napisati program koji u datoteku $rastojanja.txt$ upisuje rastojanje svake 
 od učitanih tačaka od koordinatnog početka, 
 a na standardni izlaz koordinate tačke koja je od njega najudaljenija. Ukoliko ima više takvih tačaka, ispisati koordinate prve.
 Koristiti strukturu \kckod{Tacka} sa poljima \kckod{x} i \kckod{y}, 
 kao i funkciju kojom se računa rastojanje tačke od koordinatnog početka. 
 Pretpostaviti da je maksimalan broj tačaka u datoteci $50$.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{miditest}
\begin{upotreba}{1}
#\naslovDat{tacke.txt}#
#\datoteka{4}#
#\datoteka{11 -2}#
#\datoteka{3 5}#
#\datoteka{8 -8}#
#\datoteka{0 4}#

#\naslovDat{rastojanja.txt}#
#\datoteka{11.18}#
#\datoteka{5.83}#
#\datoteka{11.31}#
#\datoteka{4.00}#

#\naslovIzlaz#
#\izlaz{Najudaljenija tačka: (8, -8)}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\naslovDat{tacke.txt}#
#\datoteka{-2}#
#\datoteka{0 0}#
#\datoteka{9 -8}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan broj tacaka.}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_07}
\end{Exercise}
\begin{Answer}[ref=p3_07]
\includecode{resenja/4_Datoteke/sve/20.c}
\end{Answer}


\begin{Exercise}[label=p3_x5]         
Definisati strukturu kojom se opisuje trodimenzioni vektor sa celobrojnim koordinatama $x$, $y$ i $z$.
U datoteci $vektori.txt$ nalazi se nepoznati broj vektora. 
Napisati program koji učitava vektore iz ove datoteke i na standardni izlaz ispisuje 
koordinate vektora sa najvećom dužinom. 
Dužina vektora se izračunava po formuli: $|v|= \sqrt{x^2+y^2+z^2}$.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovDat{vektori.txt}#
#\datoteka{2}#
#\datoteka{4 -1 7}#
#\datoteka{3 1 2}#

#\naslovIzlaz#
#\izlaz{4 -1 7}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovDat{vektori.txt}#
#\datoteka{670}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan broj}#
#\izlaz{vektora.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovDat{vektori.txt}#
#\datoteka{3}#
#\datoteka{0 0 0}#
#\datoteka{0 1 0}#
#\datoteka{1 0 0}#

#\naslovIzlaz#
#\izlaz{0 1 0}#
\end{upotreba}
\end{minitest}

\begin{minitest}
\begin{upotreba}{4}
#\naslovDat{vektori.txt}#
#\datoteka{4}#
#\datoteka{3 0 1}#
#\datoteka{4 5 2}#
#\datoteka{1 0 0}#
#\datoteka{2 -1 2}#

#\naslovIzlaz#
#\izlaz{4 5 2}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{5}
#\naslovDat{vektori.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{6}
#\naslovDat{vektori.txt}#
#\datoteka{1}#
#\datoteka{1 1 1}#

#\naslovIzlaz#
#\izlaz{1 1 1}#
\end{upotreba}
\end{minitest}
\linkresenje{p3_x5}
\end{Exercise}
\begin{Answer}[ref=p3_x5]
Pogledajte zadatak \ref{p3_07}.
\end{Answer}


\begin{Exercise}[label=p3_x1]         
Definisati strukturu \kckod{Pravougaonik} koja sadrži dužine stranica i ime pravougaonika.
Napisati program koji iz datoteke čije ime se zadaje kao argument komandne linije 
učitava podatke o pravougaonicima (nije poznato koliko), 
a zatim ispisuje imena onih pravougaonika koji su kvadrati i vrednost 
najveće površine među pravougaonicima koji nisu kvadrati.
Pretpostaviti da je maksimalan broj pravougaonika $200$, a maksimalna dužina imena pravougaonika $4$.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out pravougaonici.dat}#

#\naslovDat{pravougaonici.dat}#
#\datoteka{2 4 p1}#
#\datoteka{3 3 p2}#
#\datoteka{1 6 p3}#

#\naslovIzlaz#
#\izlaz{p2 8}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out dva.dat}#

#\naslovDat{dva.dat}#
#\datoteka{5 2 pm}#
#\datoteka{4 7 pv}#

#\naslovIzlaz#
#\izlaz{28}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out tri.dat}#

#\naslovDat{tri.dat}#
#\datoteka{5 5 m}#
#\datoteka{3 3 s}#
#\datoteka{8 8 xl}#

#\naslovIzlaz#
#\izlaz{m s xl}#
\end{upotreba}
\end{minitest}

\linkresenje{p3_x1}
\end{Exercise}
\begin{Answer}[ref=p3_x1]
\includecode{resenja/4_Datoteke/sve/22.c}
\newpage
\end{Answer}


\begin{Exercise}[label=p3_06] 
 U prvom redu datoteke $studenti.txt$ se nalazi broj studenata, 
 a zatim u posebnim redovima za svakog studenta korisničko ime na Alas serveru i poslednjih pet ocena koje je dobio. 
 Napisati program koji pronalazi studenta koji je ostvario najbolji 
 uspeh i ispisuje njegove podatke. Ukoliko ima više takvih studenata, ispisati informacije o svima.
 Pretpostaviti da je maksimalni broj studenta $100$.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{miditest}
\begin{upotreba}{1}
#\naslovDat{studenti.txt}#
#\datoteka{5}#
#\datoteka{mr15239 10 9 9 8 10}#
#\datoteka{mi14005 8 8 9 8 10}#
#\datoteka{ml15112 9 8 8 7 10}#
#\datoteka{mr15007 10 10 10 10 10}#
#\datoteka{mn13208 7 7 9 6 10}#

#\naslovIzlaz#
#\izlaz{Studenti sa najvecim prosekom:}#
#\izlaz{Korisnicko ime: mr15007}#
#\izlaz{Prosek ocena: 10.00}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\naslovDat{studenti.txt}#
#\datoteka{3}#
#\datoteka{mr16156 10 9 9 10 10}#
#\datoteka{mi17234 9 9 10 10 10}#
#\datoteka{ml17084 9 8 8 8 8}#

#\naslovIzlaz#
#\izlaz{Studenti sa najvecim prosekom:}#
#\izlaz{Korisnicko ime: mr16156}#
#\izlaz{Prosek ocena: 9.6}#
#\izlaz{}#
#\izlaz{Korisnicko ime: mi17234}#
#\izlaz{Prosek ocena: 9.6}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_06}
\end{Exercise}
\begin{Answer}[ref=p3_06]
\includecode{resenja/4_Datoteke/sve/23.c}
\end{Answer}



\skrati{2}
\begin{Exercise}[label=p3_x3]         
Definisati strukturu \kckod{Student} koja sadrži puno ime studenta, niz njegovih ocena, broj ocena i 
prosečnu ocenu.
U datoteci čije se ime zadaje kao argument komandne linije se nalaze podaci o studentima. 
Za svakog studenta dato je ime, prezime i niz ocena koji se završava nulom. 
Svi podaci su razdvojeni razmacima. Napisati program koji učitava podatke o studentima i
na standardni izlaz ispisuje podatke za studenta sa najvećim prosekom (prosek ispisati na $2$ decimale).
Ukoliko ima više takvih studenata, ispisati informacije o prvom studentu.
Pretpostaviti da je maksimalni broj ocena $10$ i maksimalna dužina punog imena $100$ karaktera. 
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.
\uputstvo{Ime i prezime studenta se mogu pročitati pomoću
specifikatora $\%s$ a potom se za kreiranje niske \kckod{puno\_ime} u 
traženom formatu može iskoristiti funkcija \kckod{strcat}.}


\skrati{2}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out studenti.txt}#

#\naslovDat{studenti.txt}#
#\datoteka{Marko Markovic 5 6 7 8 9 0}#
#\datoteka{Jelena Jankovic 10 10 10 0}#
#\datoteka{Filip Viskovic 10 9 8 7 6 0}#
#\datoteka{Jana Peric 10 10 9 9 8 8 7 0}#

#\naslovIzlaz#
#\izlaz{Jelena Jankovic 10 10 10 10.00}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\poziv{./a.out}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_x3}
\end{Exercise}
\begin{Answer}[ref=p3_x3]
\includecode{resenja/4_Datoteke/sve/24.c}
\end{Answer}

\skrati{3}
\begin{Exercise}[label=v3_05] 
Imena ulazne i izlazne datoteke se redom navode kao argumenti komandne linije.  
U ulaznoj datoteci se nalaze podaci o razlomcima:
u prvom redu se nalazi broj razlomaka, a u svakom sledećem redu brojilac i imenilac po jednog razlomka. 
Definisati strukturu koja opisuje razlomak i napisati program koji učitava niz
razlomaka iz datoteke, a potom:
\skrati{3}
\begin{enumerate}
\setlength\itemsep{0em}
\item ukoliko je prilikom pokretanja programa navedena opcija \kckod{x}, upisati u izlaznu datoteku recipročni 
razlomak za svaki razlomak iz niza
\item ukoliko je prilikom pokretanja programa navedena opcija \kckod{y}, upisati u izlaznu datoteku 
realnu vrednost recipročnog razlomka svakog razlomka iz niza
\end{enumerate}
Pretpostaviti da se u ulaznoj datoteci nalazi najviše $100$ razlomaka.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{2}
\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out d1.txt d2.txt -x}#

#\naslovDat{d1.txt}#
#\datoteka{4}#
#\datoteka{1 5}#
#\datoteka{19 3}#
#\datoteka{-2 7}#
#\datoteka{97 90}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{1 (nastavak)}
#\naslovDat{d2.txt}#
#\datoteka{5/1}#
#\datoteka{3/19}#
#\datoteka{-7/2}#
#\datoteka{90/97}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out ulaz.txt izlaz.txt}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{minitest}

\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out d1.txt d2.txt -y}#

#\naslovDat{d1.txt}#
#\datoteka{4}#
#\datoteka{1 5}#
#\datoteka{19 3}#
#\datoteka{-2 7}#
#\datoteka{97 90}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3 (nastavak)}
#\naslovDat{d2.txt}#
#\datoteka{5.000000}#
#\datoteka{0.157894}#
#\datoteka{-3.500000}#
#\datoteka{0.927835}#
\end{upotreba}
\end{minitest}
\linkresenje{v3_05}
\end{Exercise}
\begin{Answer}[ref=v3_05]
\includecode{resenja/4_Datoteke/sve/25.c}
\newpage
\end{Answer}


\skrati{3}
\begin{Exercise}[label=v3_06] 
Definisati strukturu \kckod{Automobil} koja sadrži marku, model i cenu.
Napisati program koji iz datoteke čije se ime zadaje sa standardnog ulaza učitava broj automobila
i podatke za svaki automobil i zatim:
\skrati{1}
\begin{enumerate}
\setlength\itemsep{0em}
\item ispisuje prosečnu cenu po marki automobila 
\item za maksimalnu cenu koju je kupac spreman da plati, a koja se
zadaje kao argument komandne linije, ispisuje automobile u tom cenovnom
rangu
\end{enumerate}
Pretpostaviti da se model i marka sastoje od jedne reči, da svaka od njih sadrži najviše 30 karaktera i da se u datoteci
nalaze podaci za najviše 100 automobila.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{2}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out 5000}#

#\naslovInt#
#\izlaz{Unesite naziv datoteke:}#
#\ulaz{dat1.txt}#

#\naslovDat{dat1.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\poziv{./a.out}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}


\skrati{3}
\begin{miditest}
\begin{upotreba}{3}
#\poziv{./a.out 4000}#

#\naslovInt#
#\izlaz{Unesite naziv datoteke:}#
#\ulaz{dat1.txt}#

#\naslovDat{dat1.txt}#
#\datoteka{7}#
#\datoteka{renault twingo 2900}#
#\datoteka{renault megan 6250}#
#\datoteka{renault clio 3650}#
#\datoteka{dacia logan 5400}#
#\datoteka{dacia sandero 7800}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{3 (nastavak)}
#\datoteka{fiat bravo 4900}#
#\datoteka{fiat linea 4290}#

#\naslovIzlaz#
#\izlaz{Informacije o prosecnoj}#
#\izlaz{ceni po markama:}#
#\izlaz{renault 4266.67 3}#
#\izlaz{dacia 6600.00 2}#
#\izlaz{fiat 4595.00 2}#
#\izlaz{}#
#\izlaz{Kola u Vasem cenovnom rangu:}#
#\izlaz{renault twingo 2900}#
#\izlaz{renault clio 3650}#
\end{upotreba}
\end{miditest}

\linkresenje{v3_06}
\end{Exercise}
\begin{Answer}[ref=v3_06]
\includecode{resenja/4_Datoteke/sve/26.c}
\end{Answer}


%% ----------- STRUKTURE KRAJ ----------

%% ---------- LINIJE POCETAK ----------

% \subsection{Linija po linija}

\skrati{3}
\begin{Exercise}[label=p3_03] 
 Kao argumenti komandne linije zadaju se ime datoteke i ceo broj $k$. 
 Napisati program koji na  standardni izlaz ispisuje sve linije zadate datoteke čija je dužina veća od $k$. 
 Pretpostaviti da je maksimalna dužina linije $80$ karaktera.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{3}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out test.txt 7}#

#\naslovDat{test.txt}#
#\datoteka{Teme koje su obradjivane:}#
#\datoteka{Petlje}#
#\datoteka{Funkcije}#
#\datoteka{Nizovi}#
#\datoteka{Strukture}#

#\naslovIzlaz#
#\izlaz{Teme koje su obradjivane:}#
#\izlaz{Funkcije}#
#\izlaz{Strukture}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\poziv{./a.out test.txt}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_03}
\end{Exercise}
\begin{Answer}[ref=p3_03]
\includecode{resenja/4_Datoteke/sve/28.c}
\newpage
\end{Answer}


\skrati{3}
\begin{Exercise}[label=v3_02] 
Napisati program koji u datoteci čije se ime navodi kao argument komandne 
linije određuje liniju maksimalne dužine i ispisuje je na standardni izlaz. 
Ukoliko ima više takvih linija, ispisati onu koja je leksikografski prva. 
Pretpostaviti da je maksimalna dužina linije $80$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{3}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out test.txt}#

#\naslovDat{test.txt}#
#\datoteka{Danas je veoma hladno decembarsko}#
#\datoteka{popodne. Ne pada sneg, kazu mozda}#
#\datoteka{ce sutra.}#

#\naslovIzlaz#
#\izlaz{Danas je veoma hladno decembarsko}#
\end{upotreba}
\end{miditest}
\begin{minitest}
\begin{upotreba}{2}
#\poziv{./a.out in.txt}#

#\naslovDat{in.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{minitest}

\linkresenje{v3_02}
\end{Exercise}
\begin{Answer}[ref=v3_02]
\includecode{resenja/4_Datoteke/sve/27.c}
\end{Answer}


\skrati{3}
\begin{Exercise}[label=v3_04] 
U datoteci čije se ime navodi kao prvi argument komandne
linije navedena je reč $r$ i niz linija. Napisati
program koji u datoteku čije se ime navodi kao
drugi argument komandne linije upisuje sve linije prve datoteke 
u kojima se reč $r$ pojavljuje bar $n$ puta gde je
$n$ pozitivan ceo broj koji se unosi sa standardnog ulaza. 
Prilikom prebrojavanja, računaju se i samostalna pojavljivanja reči $r$ i pojavljivanja u okviru neke druge reči. 
Ispis treba da bude u formatu \kckod{broj\_pojavljivanja:linija}.
Pretpostaviti da je maksimalna dužina reči $100$ karaktera, a linije $500$ karaktera.
U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.
 
\skrati{3}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out input.txt output.txt}#

#\naslovInt#
#\izlaz{Unesite broj n:}\ulaz{2}#

#\naslovDat{input.txt}#
#\datoteka{sto}#
#\datoteka{stolica lampa}#
#\datoteka{postotak Stopiranje stopa}# 
#\datoteka{presto Ostoja stotina prostorija}#

#\naslovDat{output.txt}#
#\datoteka{2: postotak Stopiranje stopa}# 
#\datoteka{4: presto Ostoja stotina prostorija}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\poziv{./a.out input.txt output.txt}#

#\naslovInt#
#\izlaz{Unesite broj n:}\ulaz{3}#

#\naslovDat{input.txt}#
#\datoteka{red}#
#\datoteka{redar za ovu nedelju}#
#\datoteka{redosled ured}# 
#\datoteka{odrediti raspored}#

#\naslovDat{output.txt}#

\end{upotreba}
\end{miditest}

\begin{miditest}
\begin{upotreba}{3}
#\poziv{./a.out in.txt out.txt}#

#\naslovDat{in.txt ne postoji}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neuspesno otvaranje}#
#\izlaz{ulazne datoteke.}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{4}
#\poziv{./a.out in.txt}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}
\linkresenje{v3_04}
\end{Exercise}
\begin{Answer}[ref=v3_04]
\includecode{resenja/4_Datoteke/sve/29.c}
\end{Answer}


\begin{Exercise}[label=p3_04] 
 Napisati program koji prebrojava koliko se linija datoteke $ulaz.txt$ završava niskom $s$ 
 koja se učitava sa standardnog ulaza. Pretpostaviti da je maksimalna dužina linije $80$ karaktera, a niske $s$ $20$ karaktera.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\begin{miditest}
\begin{upotreba}{1}
#\naslovDat{ulaz.txt}#
#\datoteka{/home/korisnik/imena.txt}#
#\datoteka{/home/korisnik/a.out}#
#\datoteka{/home/cv.pdf}#
#\datoteka{/home/korisnik/ulaz.txt}#
#\datoteka{/home/rezultati.xlsx}#
#\datoteka{/var/log/apache2/error.log}#

#\naslovInt#
#\izlaz{Unesite nisku s:}\ulaz{.txt}#
#\izlaz{Broj linija: 2}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\naslovDat{ulaz.txt}#
#\datoteka{/var/log/apache2/error.log}#
#\datoteka{/var/log/dpkg.log}#
#\datoteka{moj\_log.log}#
#\datoteka{/home/korisnik.login}#
#\datoteka{/home/korisnik.log.txt}#

#\naslovInt#
#\izlaz{Unesite nisku s:}\ulaz{.log}#
#\izlaz{Broj linija: 3}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_04}
\end{Exercise}
\begin{Answer}[ref=p3_04]
\includecode{resenja/4_Datoteke/sve/30.c}
\end{Answer}


\skrati{2}
\begin{Exercise}[label=p3_09] 
 Napisati program koji linije koje se učitavaju sa standardnog ulaza sve do kraja ulaza 
 prepisuje u datoteku $izlaz.txt$ i to, ako je prilikom pokretanja zadata opcija 
 \kckod{-v} ili \kckod{-V} samo one linije koje počinju velikim slovom, 
 ako je zadata opcija \kckod{-m} ili \kckod{-M} samo one linije koje počinju malim slovom, 
 a ako je opcija izostavljena sve linije.
 Pretpostaviti da je maksimalna dužina linije $80$ karaktera.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{3}
\begin{miditest}
\begin{upotreba}{1}
#\poziv{./a.out -m}#

#\naslovInt#
#\izlaz{Unesite recenice:}#
#\ulaz{programiranje u C-u je zanimljivo}#
#\ulaz{Volim programiranje!}#
#\ulaz{Kada porastem bicu programer!}#
#\ulaz{u slobodno vreme programiram}#

#\naslovDat{izlaz.txt}#
#\datoteka{programiranje u C-u je zanimljivo}#
#\datoteka{u slobodno vreme programiram}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{2}
#\poziv{./a.out -V}#

#\naslovInt#
#\izlaz{Unesite recenice:}#
#\ulaz{programiranje u C-u je zanimljivo}#
#\ulaz{Volim programiranje!}#
#\ulaz{Kada porastem bicu programer!}#
#\ulaz{u slobodno vreme programiram}#

#\naslovDat{izlaz.txt}#
#\datoteka{Volim programiranje!}#
#\datoteka{Kada porastem bicu programer!}#
\end{upotreba}
\end{miditest}

\skrati{2}
\begin{miditest}
\begin{upotreba}{3}
#\poziv{./a.out -k}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}
\begin{miditest}
\begin{upotreba}{4}
#\poziv{./a.out}#

#\naslovIzlazZaGresku#
#\izlaz{Greska: neispravan poziv.}#
\end{upotreba}
\end{miditest}
\linkresenje{p3_09}
\end{Exercise}
\begin{Answer}[ref=p3_09]
\includecode{resenja/4_Datoteke/sve/31.c}
\skrati{3}
\end{Answer}


\skrati{3}
\begin{Exercise}[label=p3_iv10]         
Napisati program koji poredi dve datoteke i ispisuje redni broj linija u
kojima se datoteke razlikuju. Imena datoteka se zadaju kao argumenti
komandne linije. Pretpostaviti da je maksimalna dužina
linije $200$ karaktera. Linije brojati počevši od {\tt 1}.
 U slučaju greške, na standardni izlaz za greške ispisati odgovarajuću poruku.

\skrati{3}
\begin{minitest}
\begin{upotreba}{1}
#\naslovPokretanje#
#\argumenti{./a.out ulaz.txt izlaz.txt}#

#\naslovDat{ulaz.txt}#
#\datoteka{danas vezbamo}#
#\datoteka{programiranje}#
#\datoteka{ovo je primer kad su}#
#\datoteka{datoteke iste}#

#\naslovDat{izlaz.txt:}#
#\datoteka{danas vezbamo}#
#\datoteka{programiranje}#
#\datoteka{ovo je primer kad su}#
#\datoteka{datoteke iste}#

#\naslovIzlaz#
#\izlaz{}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{2}
#\naslovPokretanje#
#\argumenti{./a.out u1.dat u2.dat}#

#\naslovDat{u1.dat}#
#\datoteka{danas vezbamo}#
#\datoteka{analizu}#
#\datoteka{ovo je primer kad}#
#\datoteka{su datoteke razlicite}#

#\naslovDat{u2.dat}#
#\datoteka{danas vezbamo}#
#\datoteka{programiranje}#
#\datoteka{ovo je primer kad su}#
#\datoteka{datoteke razlicite}#

#\naslovIzlaz#
#\izlaz{2 3 4}#
\end{upotreba}
\end{minitest}
\begin{minitest}
\begin{upotreba}{3}
#\naslovPokretanje#
#\argumenti{./a.out prva.dat druga.dat}#

#\naslovDat{prva.dat}#
#\datoteka{ovo je primer}#
#\datoteka{kada su}#
#\datoteka{datoteke}#
#\datoteka{razlicite duzine}#

#\naslovDat{druga.dat}#
#\datoteka{kada su}#
#\datoteka{programiranje}#
#\datoteka{datoteke}#
#\datoteka{razlicite}#
#\datoteka{duzine}#
#\datoteka{i kada treba ispisati broj}#
#\datoteka{tih redova}#

#\naslovIzlaz#
#\izlaz{1 4 5 6 7}#
\end{upotreba}
\end{minitest}

\linkresenje{p3_iv10}
\end{Exercise}
\skrati{3}
\begin{Answer}[ref=p3_iv10]
\includecode{resenja/4_Datoteke/sve/32.c}
\end{Answer}


% ---------- LINIJE KRAJ ----------

\ifresenja
\sstrana
\section{Rešenja}
\shipoutAnswer
\fi

